enum Token {
  // Keywords.
  ABSTRACT = 257, // Parser generators reserve 0-256 for char literals,
  ALIAS,
  ALIGN,
  ASM,
  ASSERT,
  AUTO,
  BODY,
  BOOL,
  BREAK,
  BYTE,
  CASE,
  CAST,
  CATCH,
  CDOUBLE,
  CENT,
  CFLOAT,
  CHAR,
  CLASS,
  CONST,
  CONTINUE,
  CREAL,
  DCHAR,
  DEBUG,
  DEFAULT,
  DELEGATE,
  DELETE,
  DEPRECATED,
  DO,
  DOUBLE,
  ELSE,
  ENUM,
  EXPORT,
  EXTERN,
  FALSE,
  FINAL,
  FINALLY,
  FLOAT,
  FOR,
  FOREACH,
  FOREACHREVERSE,
  FUNCTION,
  GOTO,
  IDOUBLE,
  IF,
  IFLOAT,
  IMMUTABLE,
  IMPORT,
  IN,
  INOUT,
  INT,
  INTERFACE,
  INVARIANT,
  IREAL,
  IS,
  LAZY,
  LONG,
  MACRO,
  MIXIN,
  MODULE,
  NEW,
  NOTHROW,
  NULLKEYWORD,
  OUT,
  OVERRIDE,
  PACKAGE,
  PRAGMA,
  PRIVATE,
  PROTECTED,
  PUBLIC,
  PURE,
  REAL,
  REF,
  RETURN,
  SCOPE,
  SHARED,
  SHORT,
  STATIC,
  STRUCT,
  SUPER,
  SWITCH,
  SYNCHRONIZED,
  TEMPLATE,
  THIS,
  THROW,
  TRUE,
  TRY,
  TYPEDEF,
  TYPEID,
  TYPEOF,
  UBYTE,
  UCENT,
  UINT,
  ULONG,
  UNION,
  UNITTEST,
  USHORT,
  VERSION,
  VOID,
  VOLATILE,
  WCHAR,
  WHILE,
  WITH,

  // Special Keywords.
  SPFILE,
  SPFILEFULLPATH,
  SPMODULE,
  SPLINE,
  SPFUNCTION,
  SPPRETTYFUNCION,
  SPGSHARED,
  SPTRAITS,
  SPVECTOR,
  SPPARAMETERS,

  // Identifier.
  IDENTIFIER,

  // Integer.
  INTEGER,

  // String.
  DOUBLEQOUTEDSTRING,

  // WysiwygString.
  WYSIWYGSTRING,

  // HexString.
  HEXSTRING,

  // TokenString.
  TOKENSTRING,

  // Rest Tokens.
  SLASHEQ,
  DOTDOT,
  DOTDOTDOT,
  ANDAND,
  ANDEQ,
  OROR,
  OREQ,
  MINUSEQ,
  DECREMENT,
  PLUSEQ,
  INCREMENT,
  LE,
  LSH,
  LSHEQ,
  LSHRSH,
  LSHRSHEQ,
  RE,
  RSHEQ,
  RSHRSHRSHEQ,
  RSH,
  RSHRSHEQ,
  NOTEQ,
  NOTLERE,
  NOTLEREEQ,
  NOTLE,
  NOTLEEQ,
  NOTRE,
  NOTREEQ,
  EQEQ,
  STAREQ,
  PERCENTEQ,
  CARETEQ,
  CARETCARET,
  CARETCARETEQ,
  TILDEEQ,
};
